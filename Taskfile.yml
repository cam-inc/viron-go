version: '3'

silent: false

output: prefixed

env:
  GOPATH: 
    sh: go env GOPATH

includes:
  generate: ./Taskfile_generate.yaml

tasks:
  install:
    desc: Prepare a development environment
    deps:
      - pre
      - go-install-modules
      - golangci-lint-install
  pre:
    cmds:
      - echo 'Preliminary preparations have been completed.'
      - mkdir -p bin
      - test -f lib/repositories/mysql/sqlboiler.toml || cp lib/repositories/mysql/sqlboiler.toml.template lib/repositories/mysql/sqlboiler.toml
    preconditions:
      - sh: "which go"
        msg: 'Please install golang.'

  go-install-modules:
    cmds:
      - go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@latest
    status:
      - test -f {{.GOPATH}}/bin/oapi-codegen

  golangci-lint-install:
    desc: install golangci-lint
    cmds:
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b ./bin v2.0.2
    status:
      - test -f bin/golangci-lint

  gen:
    desc: code generate the project
    deps:
      - task: generate:all-oas-gen
  
  lint:
    desc: Lint the program code.
    cmds:
      - cd example && go fmt ./...
      - cd example && ../bin/golangci-lint run ./...
      - cd lib && go fmt ./...
      - cd lib && ../bin/golangci-lint run ./...

  changeset:
    desc: changeset.
    cmds:
      - git-cliff -o CHANGELOG.md
  
  clean-all:
    desc: Clean up the project
    cmds:
      - rm -rf bin

  tidy:
    desc: go modules tidy.
    cmds:
      - cd example && go mod tidy
      - cd lib && go mod tidy

  test:
    desc: Test the program code.
    cmds:
      - cd example && go test -coverprofile=cover.out ./...
      # genのテストはDB起動必要なので除外する
      - cd lib && go test -coverprofile=cover.out $(go list ./... | grep -v 'github.com/cam-inc/viron-go/lib/repositories/mysql/gen')

  test-with-mysql-gen:
    desc: Test the program code with mysql gen.
    cmds:
      - cd example && go test -coverprofile=cover.out ./...
      - cd lib && go test -coverprofile=cover.out ./...

  coverage: 
    desc: Coverage the test code.
    deps:
      - test
    cmds:
      - |
        cd example && cat ./cover.out | \
          grep -v '.gen.go' > \
          nogen.cover.out && \
          go tool cover -func=./nogen.cover.out
      - |
        cd lib && cat ./cover.out | \
          grep -v '.gen.go' > \
          nogen.cover.out && \
          go tool cover -func=./nogen.cover.out

  example-app-mongo:
    desc: start up example
    cmds:
      - cd example && go run cmd/main.go --mode mongo

  example-app-mysql:
    desc: start up example
    cmds:
      - cd example && go run cmd/main.go --mode mysql

